:root {
    /** Colors */
    --background-color: #ffffff;
    --foreground-color: #000000;
    --disabled-color: #666666;
    --read-only-color: #555555;
    --secondary-color: #eeeeee;
    --border-color: #dddddd;
    --accent-color: #0000aa;
    --information-color: #0057e7;
    --positive-color: #008744;
    --neutral-color: #aaaaaa;
    --warning-color: #ffa700;
    --negative-color: #d62d20;

    /** Spacing */
    --space-smaller: 0.25rem;
    --space-small: 0.50rem;
    --space-medium: 0.75rem;
    --space-large: 1.00rem;
    --space-larger: 2.00rem;

    /** Weight */
    --weight-none: 0;
    --weight-smaller: 1;
    --weight-small: 2;
    --weight-medium: 3;
    --weight-large: 4;
    --weight-larger: 5;

    /** Font */
    --font-normal: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    --font-heading: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    --font-input: monospace;

    /** Font Size */
    --font-size-smaller: 0.75rem;
    --font-size-small: 0.8rem;
    --font-size-medium: 1rem;
    --font-size-large: 1.5rem;
    --font-size-larger: 2rem;

    /** Font Weight */
    --font-weight-smaller: 100;
    --font-weight-small: 300;
    --font-weight-medium: 400;
    --font-weight-large: 700;
    --font-weight-larger: 900;

    /** Widths */
    --width-smaller: 200px;
    --width-small: 400px;
    --width-medium: 800px;
    --width-large: 1200px;
    --width-larger: 1600px;

    /** Heights */
    --height-smaller: 50px;
    --height-small: 100px;
    --height-medium: 150px;
    --height-large: 300px;
    --height-larger: 600px;

    /** Miscellaneous */
    --border: 1px solid var(--border-color);
    --border-radius: 0;
    --translucent-opacity: 0.5;
}

/** Reset */

* {
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
}

body {
    min-height: 100vh;
    margin: 0;
    background-color: var(--background-color);
    color: var(--foreground-color);
    font-family: var(--font-normal);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0;
}

p {
    margin: 0;
}

a {
    color: var(--accent-color);
    text-decoration: none;
}

ul {
    margin: 0;
    padding: 0 0 0 var(--space-larger);
}

img {
    max-width: 100%;
    height: auto;
    border-radius: var(--border-radius);
}

label {
    font-size: smaller;
}

input,
button,
textarea,
select {
    width: auto;
    padding: var(--space-small);
    background-color: var(--secondary-color);
    border: var(--border);
    font-size: var(--font-size-medium);
    font-family: var(--font-input);
    outline: none;
}

input {
    box-sizing: content-box;
}

input:focus,
select:focus,
textarea:focus {
    border-color: var(--accent-color);
}

input:read-only:focus,
textarea:read-only:focus {
    border-color: var(--neutral-color);
}

input[type='submit'],
input::-webkit-file-upload-button,
button {
    border: none;
    cursor: pointer;
}

button {
    background-color: var(--secondary-color);
    color: var(--foreground-color);
    border: var(--border);
}

input[type='submit'],
input::-webkit-file-upload-button,
button.input {
    background-color: var(--accent-color);
    color: var(--background-color);
    font-weight: bold;
    padding: var(--space-small);
}

input[type='checkbox'],
input[type='radio'] {
    margin: 0;
}

input[type='file'] {
    padding: 0;
    text-align: center;
}

input:not([type="submit"]):read-only {
    color: var(--read-only-color);
}

input::-webkit-file-upload-button {
    height: 100%;
}

.slidecontainer {
    width: 100%;
}

input[type="range"] {
    width: 100%;
    height: var(--space-larger);
    background: var(--secondary-color);
    padding: 0;
    margin: 0;
    outline: none;
    -webkit-appearance: none;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: var(--space-larger);
    height: var(--space-larger);
    background: var(--accent-color);
    cursor: pointer;
}

input[type="range"]::-moz-range-thumb {
    background: var(--accent-color);
    width: var(--space-larger);
    height: var(--space-larger);
    cursor: pointer;
}

textarea {
    resize: vertical;
}

hr {
    width: 100%;
    margin: 0;
    border-left: none;
    border-right: none;
    border-top: none;
    border-bottom: var(--border);
}

summary {
    cursor: pointer;
    user-select: none;
}

details[open] summary {
    padding-bottom: var(--space-medium);
}

/** Layout */

.stack {
    display: flex;
    flex-flow: column nowrap;
    justify-content: stretch;
    align-items: stretch;
    gap: var(--space-medium);
}

.rack {
    display: flex;
    flex-flow: row nowrap;
    justify-content: stretch;
    align-items: stretch;
    gap: var(--space-medium);
}

.row {
    display: flex;
    flex-flow: row wrap;
    justify-content: stretch;
    align-items: stretch;
    gap: var(--space-medium);
}

.column {
    flex: 1 1 0;
}

.gapless {
    gap: 0;
}

.horizontalGap {
    gap: 0 var(--space-medium);
}

.verticalGap {
    gap: var(--space-medium) 0;
}

.visibleOverflow {
    overflow: visible;
}

.hiddenOverflow {
    overflow: hidden;
}

.autoOverflow {
    overflow: auto;
}

/* Containers */

.checkboxContainer,
.radioContainer {
    display: grid;
    grid-template-columns: min-content 1fr;
    justify-content: flex-start;
    align-items: center;
    gap: var(--space-smaller);
}

.tableContainer {
    position: relative;
    height: 0;
    min-height: var(--height-large);
    border: var(--border);
    overflow: auto;
}

.tableContainer table {
    min-width: 100%;
    border-collapse: collapse;
}

.tableContainer thead {
    top: 0;
    position: sticky;
    background-color: var(--accent-color);
    color: var(--background-color);
}

.tableContainer tfoot {
    background-color: var(--accent-color);
    color: var(--background-color);
}

.tableContainer th {
    white-space: nowrap;
    padding: var(--space-smaller) var(--space-small);
}

.tableContainer td {
    white-space: nowrap;
    padding: 0 var(--space-small);
}

.tableContainer tbody tr:nth-child(even) {
    background-color: var(--secondary-color);
}

.horizontalScrollContainer {
    max-width: 100%;
    overflow-x: auto;
}

.verticalScrollContainer {
    height: 0;
    min-height: var(--height-large);
    overflow-y: scroll;
}

.noWrap {
    flex-wrap: nowrap;
}

.weightNone {
    flex-grow: var(--weight-none);
}

.weightSmaller {
    flex-grow: var(--weight-smaller);
}

.weightSmall {
    flex-grow: var(--weight-small);
}

.weightMedium {
    flex-grow: var(--weight-medium);
}

.weightLarge {
    flex-grow: var(--weight-large);
}

.weightLarger {
    flex-grow: var(--weight-larger);
}

.alignStart {
    align-items: flex-start;
}

.alignEnd {
    align-items: flex-end;
}

.alignCenter {
    align-items: center;
}

.alignStretch {
    align-items: stretch;
}

.justifyStart {
    justify-content: flex-start;
}

.justifyEnd {
    justify-content: flex-end;
}

.justifyCenter {
    justify-content: center;
}

.justifyStretch {
    justify-content: stretch;
}

.noTextWrap {
    white-space: nowrap;
}

.maximumWidthSmaller {
    max-width: var(--width-smaller);
}

.maximumWidthSmall {
    max-width: var(--width-small);
}

.maximumWidthMedium {
    max-width: var(--width-medium);
}

.maximumWidthLarge {
    max-width: var(--width-large);
}

.maximumWidthLarger {
    max-width: var(--width-larger);
}

.minimumWidthSmaller {
    min-width: var(--width-smaller);
}

.minimumWidthSmall {
    min-width: var(--width-small);
}

.minimumWidthMedium {
    min-width: var(--width-medium);
}

.minimumWidthLarge {
    min-width: var(--width-large);
}

.minimumWidthLarger {
    min-width: var(--width-larger);
}

.maximumHeightSmaller {
    max-height: var(--height-smaller);
}

.maximumHeightSmall {
    max-height: var(--height-small);
}

.maximumHeightMedium {
    max-height: var(--height-medium);
}

.maximumHeightLarge {
    max-height: var(--height-large);
}

.maximumHeightLarger {
    max-height: var(--height-larger);
}

.minimumHeightSmaller {
    min-height: var(--height-smaller);
}

.minimumHeightSmall {
    min-height: var(--height-small);
}

.minimumHeightMedium {
    min-height: var(--height-medium);
}

.minimumHeightLarge {
    min-height: var(--height-large);
}

.minimumHeightLarger {
    min-height: var(--height-larger);
}

.expandingWidth {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
}

.hidden {
    visibility: hidden;
}

.removed {
    display: none;
}

.disabled,
:disabled {
    cursor: default !important;
    opacity: 0.5;
}

@media only screen and (max-width: 200px) {
    .toColumnAtSmallerWidth {
        flex-flow: column nowrap;
    }

    .alignStartAtSmallerWidth {
        align-items: flex-start;
    }

    .alignEndAtSmallerWidth {
        align-items: flex-end;
    }

    .alignCenterAtSmallerWidth {
        align-items: center;
    }

    .alignStretchAtSmallerWidth {
        align-items: stretch;
    }

    .justifyStartAtSmallerWidth {
        justify-content: flex-start;
    }

    .justifyEndAtSmallerWidth {
        justify-content: flex-end;
    }

    .justifyCenterAtSmallerWidth {
        justify-content: center;
    }

    .justifyStretchAtSmallerWidth {
        justify-content: stretch;
    }

    .hideAtSmallerWidth {
        display: none;
    }
}

@media only screen and (max-width: 400px) {
    .toColumnAtSmallWidth {
        flex-flow: column nowrap;
    }

    .alignStartAtSmallWidth {
        align-items: flex-start;
    }

    .alignEndAtSmallWidth {
        align-items: flex-end;
    }

    .alignCenterAtSmallWidth {
        align-items: center;
    }

    .alignStretchAtSmallWidth {
        align-items: stretch;
    }

    .justifyStartAtSmallWidth {
        justify-content: flex-start;
    }

    .justifyEndAtSmallWidth {
        justify-content: flex-end;
    }

    .justifyCenterAtSmallWidth {
        justify-content: center;
    }

    .justifyStretchAtSmallWidth {
        justify-content: stretch;
    }

    .hideAtSmallWidth {
        display: none;
    }
}

@media only screen and (max-width: 600px) {
    .toColumnAtMediumWidth {
        flex-flow: column nowrap;
    }

    .alignStartAtMediumWidth {
        align-items: flex-start;
    }

    .alignEndAtMediumWidth {
        align-items: flex-end;
    }

    .alignCenterAtMediumWidth {
        align-items: center;
    }

    .alignStretchAtMediumWidth {
        align-items: stretch;
    }

    .justifyStartAtMediumWidth {
        justify-content: flex-start;
    }

    .justifyEndAtMediumWidth {
        justify-content: flex-end;
    }

    .justifyCenterAtMediumWidth {
        justify-content: center;
    }

    .justifyStretchAtMediumWidth {
        justify-content: stretch;
    }

    .hideAtMediumWidth {
        display: none;
    }
}

@media only screen and (max-width: 800px) {
    .toColumnAtLargeWidth {
        flex-flow: column nowrap;
    }

    .alignStartAtLargeWidth {
        align-items: flex-start;
    }

    .alignEndAtLargeWidth {
        align-items: flex-end;
    }

    .alignCenterAtLargeWidth {
        align-items: center;
    }

    .alignStretchAtLargeWidth {
        align-items: stretch;
    }

    .justifyStartAtLargeWidth {
        justify-content: flex-start;
    }

    .justifyEndAtLargeWidth {
        justify-content: flex-end;
    }

    .justifyCenterAtLargeWidth {
        justify-content: center;
    }

    .justifyStretchAtLargeWidth {
        justify-content: stretch;
    }

    .hideAtLargeWidth {
        display: none;
    }
}

@media only screen and (max-width: 1200px) {
    .toColumnAtLargerWidth {
        flex-flow: column nowrap;
    }

    .alignStartAtLargerWidth {
        align-items: flex-start;
    }

    .alignEndAtLargerWidth {
        align-items: flex-end;
    }

    .alignCenterAtLargerWidth {
        align-items: center;
    }

    .alignStretchAtLargerWidth {
        align-items: stretch;
    }

    .justifyStartAtLargerWidth {
        justify-content: flex-start;
    }

    .justifyEndAtLargerWidth {
        justify-content: flex-end;
    }

    .justifyCenterAtLargerWidth {
        justify-content: center;
    }

    .justifyStretchAtLargerWidth {
        justify-content: stretch;
    }

    .hideAtLargerWidth {
        display: none;
    }
}

/** Utility */

.card {
    padding: var(--space-medium);
    border: var(--border);
    border-radius: var(--border-radius);
    background-color: var(--background-color);
}

.loading {
    position: relative;
    overflow: visible;
}

.loading::before {
    content: ' ';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: black;
    opacity: var(--translucent-opacity);
    border-radius: var(--border-radius);
    z-index: 2;
}

.loading:after {
    content: ' ';
    position: absolute;
    width: var(--space-larger);
    height: var(--space-larger);
    top: calc(50% - var(--space-larger));
    left: calc(50% - var(--space-larger));
    border-radius: 50%;
    border: var(--space-small) solid var(--accent-color);
    border-color: transparent var(--accent-color) transparent var(--accent-color);
    animation: loading 1s ease-in-out infinite;
    z-index: 3;
}

@keyframes loading {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(180deg);
    }
}

.breathable {
    padding: var(--space-medium);
}

.breathableHorizontal {
    padding: 0 var(--space-medium);
}

.breathableVertical {
    padding: var(--space-medium) 0;
}

.border {
    border: var(--border);
}

.textAlignStart {
    text-align: start;
}

.textAlignCenter {
    text-align: center;
}

.textAlignEnd {
    text-align: end;
}

.textColorBackground {
    color: var(--background-color);
}

.textColorSecondary {
    color: var(--secondary-color);
}

.textColorNormal {
    color: var(--foreground-color);
}

.textColorAccent {
    color: var(--accent-color);
}

.textColorPositive {
    color: var(--positive-color);
}

.textColorNeutral {
    color: var(--neutral-color);
}

.textColorNegative {
    color: var(--negative-color);
}

.backgroundColorBackground {
    background-color: var(--background-color);
}

.backgroundColorSecondary {
    background-color: var(--secondary-color);
}

.backgroundColorNormal {
    background-color: var(--foreground-color);
}

.backgroundColorAccent {
    background-color: var(--accent-color);
}

.backgroundColorPositive {
    background-color: var(--positive-color);
}

.backgroundColorNeutral {
    background-color: var(--neutral-color);
}

.backgroundColorNegative {
    background-color: var(--negative-color);
}

.fontSizeSmaller {
    font-size: var(--font-size-smaller);
}

.fontSizeSmall {
    font-size: var(--font-size-small);
}

.fontSizeMedium {
    font-size: var(--font-size-medium);
}

.fontSizeLarge {
    font-size: var(--font-size-large);
}

.fontSizeLarger {
    font-size: var(--font-size-larger);
}

.fontWeightSmaller {
    font-weight: var(--font-weight-smaller);
}

.fontWeightSmall {
    font-weight: var(--font-weight-small);
}

.fontWeightMedium {
    font-weight: var(--font-weight-medium);
}

.fontWeightLarge {
    font-weight: var(--font-weight-large);
}

.fontWeightLarger {
    font-weight: var(--font-weight-larger);
}

.fontStyleItalic {
    font-style: italic;
}

@media (prefers-reduced-motion: no-preference) {
    [animateIn] {
        opacity: 0;
        animation-fill-mode: forwards;
    }

    .animationDelaySmaller {
        animation-delay: 200ms;
    }

    .animationDelaySmall {
        animation-delay: 400ms;
    }

    .animationDelayMedium {
        animation-delay: 600ms;
    }

    .animationDelayLarge {
        animation-delay: 800ms;
    }

    .animationDelayLarger {
        animation-delay: 1000ms;
    }

    @keyframes flipIn {
        0% {
            transform: scaleY(0);
            opacity: 0;
        }

        100% {
            transform: scaleY(1);
            opacity: 1;
        }
    }

    .flipInAnimation {
        animation-name: flipIn;
        animation-duration: 1000ms;
    }

    @keyframes slideIn {
        0% {
            transform: translate(10%, -5%);
            opacity: 0;
        }

        100% {
            transform: translate(0, 0);
            opacity: 1;
        }
    }

    .slideInAnimation {
        animation-name: slideIn;
        animation-duration: 500ms;
    }

    @keyframes fadeIn {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    .fadeInAnimation {
        animation-name: fadeIn;
        animation-duration: 600ms;
    }
}